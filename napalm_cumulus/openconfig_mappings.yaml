---
interfaces:
    interface:
        _block_capture: "(?P<block>interface (?P<key>(eth|swp|lo|vlan|bridge|bond)\\d*)\n(?:.|\n)*?^$)"
        name:
            _search: "interface (?P<value>(eth|swp|lo|vlan|bridge|bond).*)"
            _type: py23_compat.text_type
        hold_time:
            config:
                down:
                    _search: "napalm: not implemented"
                    _type: int
                    _default: 0
                up:
                    _search: "napalm: not implemented"
                    _type: int
                    _default: 0
        config:
            name:
                _search: "interface (?P<value>(eth|swp|lo|vlan|bridge|bond).*)"
                _type: py23_compat.text_type
            type_:
                _search: "interface (?P<value>(eth|swp|lo|vlan|bridge|bond)).*"
                _type: mapping
                _map:
                    eth: napalm_yang.ianaift.Ethernetcsmacd
                    swp: napalm_yang.ianaift.Ethernetcsmacd
                    lo: napalm_yang.ianaift.Softwareloopback
                    vlan: napalm_yang.ianaift.L2Vlan
                    bridge: napalm_yang.ianaift.Ethernetcsmacd
                    bond: napalm_yang.interfaces.Ieee8023Adlag
            enabled:
                _search: "UP"
                _type: boolean
                _default: False
            description:
                _search: "alias (?P<value>.*)"
                _type: py23_compat.text_type
                _default: ""
            mtu:
                _search: "mtu (?P<value>(?!(?:65536))\\d+)"
                _type: int
                _default: 1500
        subinterfaces:
            subinterface:
                _block_capture: "(?P<block>interface (?P<key>{parent_key}\\.\\d+)\\n(?:.|\\n)*?^$)"
                index:
                    _search: "napalm: not implemented"
                    _type: int
                    _default: 0
                config:
                    index:
                        _search: "napalm: not implemented"
                        _type: int
                        _default: 0
                    name:
                        _search: "interface (?P<value>(eth|swp|lo|vlan|bridge|bond).*)"
                        _type: py23_compat.text_type
                    enabled:
                        _search: "UP"
                        _type: boolean
                        _default: False
                    description:
                        _search: "alias (?P<value>.*)"
                        _type: py23_compat.text_type
                        _default: ""
